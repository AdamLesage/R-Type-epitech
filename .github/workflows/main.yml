name: Github Actions Zappy

on:
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

jobs:
  build_cross_platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

  check_compilation:
    needs:
      - build_cross_platform
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build with make
        if: runner.os == 'Linux'
        run: |
          echo "$(whoami) ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$(whoami)
          sudo apt install libboost-all-dev
          sudo apt install libsfml-dev
          sudo apt install libconfig++-dev
          make
          if [[ ! -f r-type_client || ! -f r-type_server ]]; then
            echo "Build failed: Binaries not found!"
            exit 1
          fi
        timeout-minutes: 10

  release_mode_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Release Mode
        run: |
          sudo apt-get update && sudo apt-get install -y expect
          mkdir -p ~/workflow/R-Type-epitech
          cp -r . ~/workflow/R-Type-epitech
          cp release/linux_installer.sh ~/workflow/linux_installer.sh
          cd ~/workflow
          chmod +x linux_installer.sh
          echo "$(whoami) ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$(whoami)
          expect -c '
          set timeout 300
            expect {
            "Do you want to continue? (y/n)" {
              send "y\r"
              exp_continue
            }
            "You may be asked for your password to proceed with the installation." {
              exp_continue
            }
            "Do you want to continue? (y/n)" {
              send "y\r"
              exp_continue
            }
            "Do you want to continue? (y/n)" {
              send "y\r"
              exp_continue
            }
          }
          expect eof
          '
      - name: Verify Binaries in Release Mode
        run: |
          ls ~/workflow/R-Type-epitech/r-type_client
          ls ~/workflow/R-Type-epitech/r-type_server
        timeout-minutes: 15

  create_linux_release:
    needs:
      - release_mode_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create Linux Archive
        run: |
          mkdir -p release_archive
          cp -r R-Type-epitech release_archive/R-Type-epitech
          cp R-Type-epitech/release/linux_installer.sh release_archive/linux_installer.sh
          tar -czvf r-type_linux_release.tar.gz -C release_archive .
      - name: Upload Release to GitHub
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./r-type_linux_release.tar.gz
          asset_name: r-type_linux_release.tar.gz
          asset_content_type: application/gzip

  push_to_mirror:
    needs:
      - create_linux_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Mirror repository for Linux
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.REPOSITORY_SSH }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
